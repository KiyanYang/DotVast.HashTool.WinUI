<Page
    x:Class="DotVast.HashTool.WinUI.Views.HomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:DotVast.HashTool.WinUI.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:DotVast.HashTool.WinUI.Models"
    AllowDrop="True"
    DragOver="Page_DragOver"
    Drop="Page_Drop"
    NavigationCacheMode="Required"
    mc:Ignorable="d">

    <Page.Resources>
        <XamlUICommand x:Key="SetHashOptionCommand" Command="{x:Bind ViewModel.SetHashOptionCommand}" />
    </Page.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid x:Name="ContentArea" Style="{StaticResource NavigationViewPageContentStyle}">
            <StackPanel Orientation="Vertical" Spacing="8">

                <!-- 任务模式选择, 输入, 浏览按钮, 文本编码选择 -->
                <Grid ColumnSpacing="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ComboBox
                        Grid.Column="0"
                        ItemsSource="{x:Bind ViewModel.HashTaskModes}"
                        SelectedItem="{x:Bind ViewModel.CurrentHashTask.Mode, Mode=TwoWay}" />
                    <TextBox Grid.Column="1" Text="{x:Bind ViewModel.CurrentHashTask.Content, Mode=TwoWay}" />
                    <Grid Grid.Column="2">
                        <Button
                            x:Uid="Home_Button_Pick"
                            Command="{x:Bind ViewModel.PickCommand}"
                            Visibility="{x:Bind helpers:XamlFunctionHelper.VisibleIfNotText(ViewModel.CurrentHashTask.Mode), Mode=OneWay}" />
                        <ComboBox
                            DisplayMemberPath="Name"
                            ItemsSource="{x:Bind ViewModel.TextEncodings}"
                            SelectedItem="{x:Bind ViewModel.UTF8}"
                            SelectedValue="{x:Bind ViewModel.CurrentHashTask.Encoding, Mode=TwoWay}"
                            SelectedValuePath="Encoding"
                            Visibility="{x:Bind helpers:XamlFunctionHelper.VisibleIfText(ViewModel.CurrentHashTask.Mode), Mode=OneWay}" />
                    </Grid>
                </Grid>

                <!-- 哈希算法选择 -->
                <Border Style="{StaticResource CardBorderStyle}">
                    <ItemsRepeater ItemsSource="{x:Bind ViewModel.HashOptions}">
                        <ItemsRepeater.Layout>
                            <UniformGridLayout ItemsStretch="Fill" />
                        </ItemsRepeater.Layout>
                        <ItemsRepeater.ItemTemplate>
                            <DataTemplate x:DataType="models:HashOption">
                                <CheckBox
                                    Command="{StaticResource SetHashOptionCommand}"
                                    CommandParameter="{x:Bind}"
                                    Content="{x:Bind Hash.Name}"
                                    IsChecked="{x:Bind IsChecked, Mode=TwoWay}" />
                            </DataTemplate>
                        </ItemsRepeater.ItemTemplate>
                    </ItemsRepeater>
                </Border>

                <!-- 进度条 -->
                <ProgressBar
                    Maximum="{x:Bind ViewModel.AtomProgressBar.Max, Mode=OneWay}"
                    Minimum="{x:Bind ViewModel.AtomProgressBar.Min, Mode=OneWay}"
                    ShowPaused="{x:Bind ViewModel.AtomProgressBar.ShowPaused, Mode=OneWay}"
                    Value="{x:Bind ViewModel.AtomProgressBar.Val, Mode=OneWay}" />
                <ProgressBar
                    Maximum="{x:Bind ViewModel.TaskProgressBar.Max, Mode=OneWay}"
                    Minimum="{x:Bind ViewModel.TaskProgressBar.Min, Mode=OneWay}"
                    ShowPaused="{x:Bind ViewModel.TaskProgressBar.ShowPaused, Mode=OneWay}"
                    Value="{x:Bind ViewModel.TaskProgressBar.Val, Mode=OneWay}" />

                <!-- 操作按钮: 开始, 暂停(继续), 取消 -->
                <Grid ColumnSpacing="8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Button
                        Grid.Column="0"
                        Command="{x:Bind ViewModel.StartTaskCommand}"
                        Content="{x:Bind ViewModel.StartButton.Content, Mode=OneWay}"
                        IsEnabled="{x:Bind ViewModel.StartButton.IsEnabled, Mode=OneWay}" />
                    <Button
                        Grid.Column="1"
                        Command="{x:Bind ViewModel.ResetTaskCommand}"
                        Content="{x:Bind ViewModel.ResetButton.Content, Mode=OneWay}"
                        IsEnabled="{x:Bind ViewModel.ResetButton.IsEnabled, Mode=OneWay}" />
                    <Button
                        Grid.Column="2"
                        Command="{x:Bind ViewModel.CancelTaskCommand}"
                        Content="{x:Bind ViewModel.CancelButton.Content, Mode=OneWay}"
                        IsEnabled="{x:Bind ViewModel.CancelButton.IsEnabled, Mode=OneWay}" />
                </Grid>

                <TeachingTip
                    x:DefaultBindMode="OneWay"
                    Title="{x:Bind ViewModel.TipMessage.Title}"
                    IsOpen="{x:Bind ViewModel.TipMessage.IsOpen}"
                    Subtitle="{x:Bind ViewModel.TipMessage.Subtitle}" />

            </StackPanel>
        </Grid>
    </ScrollViewer>

</Page>
