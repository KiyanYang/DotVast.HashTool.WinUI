<UserControl
    x:Class="DotVast.HashTool.WinUI.Controls.HashTaskGrid"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:behaviors="using:DotVast.HashTool.WinUI.Behaviors"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:i18n="using:DotVast.HashTool.WinUI.Strings"
    xmlns:local="using:DotVast.HashTool.WinUI.Controls"
    mc:Ignorable="d">

    <Grid ColumnSpacing="8" RowSpacing="4">
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="80" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <!-- 计算内容 -->
        <TextBlock
            HorizontalAlignment="Left"
            IsTextSelectionEnabled="True"
            Text="{x:Bind HashTask.Content}"
            TextTrimming="CharacterEllipsis"
            ToolTipService.ToolTip="{x:Bind HashTask.Content}" />

        <!-- 状态: 文本状态, 环形进度条 -->
        <TextBlock
            Grid.RowSpan="2"
            Grid.Column="1"
            HorizontalAlignment="Center"
            Foreground="{ThemeResource TextFillColorSecondaryBrush}"
            Text="{x:Bind HashTask.State, Mode=OneWay}"
            Visibility="{x:Bind local:HashTaskGrid.GetHashTaskStateTextVisibility(HashTask.State), Mode=OneWay}" />
        <Grid
            Grid.RowSpan="2"
            Grid.Column="1"
            Visibility="{x:Bind local:HashTaskGrid.GetProgressRingVisibility(HashTask.State), Mode=OneWay}">
            <ProgressRing
                Width="40"
                Height="40"
                IsIndeterminate="{x:Bind local:HashTaskGrid.IsProgressRingIndeterminate(HashTask.State), Mode=OneWay}"
                Maximum="{x:Bind HashTask.ProgressMax, Mode=OneWay}"
                Value="{x:Bind HashTask.ProgressVal, Mode=OneWay}" />
            <TextBlock HorizontalAlignment="Center" Text="{x:Bind local:HashTaskGrid.GetProgressText(HashTask.ProgressVal, HashTask.ProgressMax), Mode=OneWay}" />
        </Grid>

        <!-- 命令: 开始, 暂停, 继续, 取消, 删除 -->
        <CommandBar
            Grid.RowSpan="2"
            Grid.Column="2"
            DefaultLabelPosition="Collapsed">
            <CommandBar.Resources>
                <Style BasedOn="{StaticResource CollapsedAppBarButtonStyle}" TargetType="AppBarButton" />
            </CommandBar.Resources>
            <AppBarButton Command="{x:Bind ViewModel.StartTaskCommand}">
                <i:Interaction.Behaviors>
                    <behaviors:ControlIsEnabledToVisibilityBehavior />
                </i:Interaction.Behaviors>
                <AppBarButton.Icon>
                    <FontIcon Glyph="{x:Bind local:HashTaskGrid.GetStartBtnIcon()}" />
                </AppBarButton.Icon>
            </AppBarButton>
            <AppBarButton Command="{x:Bind ViewModel.ResetTaskCommand}">
                <i:Interaction.Behaviors>
                    <behaviors:ControlIsEnabledToVisibilityBehavior />
                </i:Interaction.Behaviors>
                <AppBarButton.Icon>
                    <FontIcon Glyph="{x:Bind local:HashTaskGrid.GetResetBtnIcon(HashTask.State), Mode=OneWay}" />
                </AppBarButton.Icon>
            </AppBarButton>
            <CommandBar.SecondaryCommands>
                <AppBarButton Command="{x:Bind ViewModel.CancelTaskCommand}" Label="{x:Bind i18n:LocalizationCommon.Cancel}">
                    <i:Interaction.Behaviors>
                        <behaviors:ControlIsEnabledToVisibilityBehavior />
                    </i:Interaction.Behaviors>
                    <AppBarButton.Icon>
                        <FontIcon Glyph="{x:Bind local:HashTaskGrid.GetCancelBtnIcon()}" />
                    </AppBarButton.Icon>
                </AppBarButton>
                <AppBarButton Command="{x:Bind ViewModel.DeleteTaskCommand}" Label="{x:Bind i18n:LocalizationCommon.Delete}">
                    <AppBarButton.Icon>
                        <FontIcon Glyph="{x:Bind local:HashTaskGrid.GetDeleteBtnIcon()}" />
                    </AppBarButton.Icon>
                </AppBarButton>
            </CommandBar.SecondaryCommands>
        </CommandBar>

        <!-- 次要信息: 模式, 创建时间, 编码, 哈希算法 -->
        <TextBlock
            Grid.Row="1"
            FontSize="12"
            Foreground="{ThemeResource TextFillColorSecondaryBrush}"
            Text="{x:Bind local:HashTaskGrid.GetSecondaryInformationText(HashTask)}"
            TextTrimming="CharacterEllipsis"
            ToolTipService.ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}" />
    </Grid>
</UserControl>
