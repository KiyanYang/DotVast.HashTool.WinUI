<Page
    x:Class="DotVast.HashTool.WinUI.Views.HomePage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="using:DotVast.HashTool.WinUI.Behaviors"
    xmlns:controls="using:DotVast.HashTool.WinUI.Views.Controls"
    xmlns:dataTemplateSelectors="using:DotVast.HashTool.WinUI.Helpers.DataTemplateSelectors"
    xmlns:enums="using:DotVast.HashTool.WinUI.Enums"
    xmlns:helpers="using:DotVast.HashTool.WinUI.Helpers"
    xmlns:i18n="using:DotVast.HashTool.WinUI.Strings"
    xmlns:local="using:DotVast.HashTool.WinUI.Views"
    xmlns:models="using:DotVast.HashTool.WinUI.Models"
    x:Name="This"
    AllowDrop="True"
    DragOver="Page_DragOver"
    Drop="Page_Drop"
    NavigationCacheMode="Required">

    <Page.Resources>
        <Style BasedOn="{StaticResource DefaultTextBoxStyle}" TargetType="TextBox">
            <Setter Property="IsSpellCheckEnabled" Value="False" />
        </Style>
    </Page.Resources>

    <behaviors:NavigationViewHeaderBehavior.HeaderTemplate>
        <DataTemplate>
            <controls:NavigationViewHeader
                AllowDrop="True"
                DragOver="Page_DragOver"
                Drop="Page_Drop">
                <TextBlock Style="{StaticResource PageTitleStyle}" Text="{Binding}" />
            </controls:NavigationViewHeader>
        </DataTemplate>
    </behaviors:NavigationViewHeaderBehavior.HeaderTemplate>

    <controls:NavigationViewBodyScrollViewer>
        <Grid x:Name="ContentArea" Style="{StaticResource NavigationViewBodyContentStyle}">
            <StackPanel Orientation="Vertical" Spacing="8">
                <StackPanel.ChildrenTransitions>
                    <TransitionCollection>
                        <RepositionThemeTransition IsStaggeringEnabled="False" />
                    </TransitionCollection>
                </StackPanel.ChildrenTransitions>

                <!-- 任务模式选择, 输入, 浏览按钮 -->
                <Grid ColumnSpacing="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ComboBox
                        Grid.Column="0"
                        ItemsSource="{x:Bind ViewModel.HashTaskModes}"
                        SelectedItem="{x:Bind ViewModel.InputtingMode, Mode=TwoWay}"
                        ToolTipService.ToolTip="{x:Bind ViewModel.InputtingMode, Mode=OneWay}">
                        <ComboBox.ItemTemplateSelector>
                            <dataTemplateSelectors:ComboBoxIconDataTemplateSelector>
                                <dataTemplateSelectors:ComboBoxIconDataTemplateSelector.Normal>
                                    <DataTemplate x:DataType="enums:HashTaskMode">
                                        <FontIcon Glyph="{x:Bind local:HomePage.GetHashTaskModeFontIconGlyph((enums:HashTaskMode))}" />
                                    </DataTemplate>
                                </dataTemplateSelectors:ComboBoxIconDataTemplateSelector.Normal>
                                <dataTemplateSelectors:ComboBoxIconDataTemplateSelector.DropDown>
                                    <DataTemplate x:DataType="enums:HashTaskMode">
                                        <StackPanel Orientation="Horizontal" Spacing="8">
                                            <FontIcon Glyph="{x:Bind local:HomePage.GetHashTaskModeFontIconGlyph((enums:HashTaskMode))}" />
                                            <TextBlock Text="{x:Bind enums:HashTaskModeExtensions.ToDisplay((enums:HashTaskMode))}" />
                                        </StackPanel>
                                    </DataTemplate>
                                </dataTemplateSelectors:ComboBoxIconDataTemplateSelector.DropDown>
                            </dataTemplateSelectors:ComboBoxIconDataTemplateSelector>
                        </ComboBox.ItemTemplateSelector>
                    </ComboBox>
                    <TextBox
                        x:Name="InputtingContent"
                        Grid.Column="1"
                        AcceptsReturn="False"
                        Text="{x:Bind ViewModel.InputtingContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        TextWrapping="NoWrap" />
                    <Popup
                        x:Name="InputtingContentFullPopup"
                        Grid.Column="1"
                        IsLightDismissEnabled="True"
                        IsOpen="{x:Bind helpers:XamlFunc.TrueIfTrue(InputtingContentToggleButton.IsChecked), Mode=OneWay}">
                        <TextBox
                            x:Name="InputtingContentFull"
                            MinHeight="64"
                            AcceptsReturn="False"
                            Background="{ThemeResource AcrylicBackgroundFillColorDefaultBrush}"
                            Loaded="InputtingContentFull_Loaded"
                            Text="{x:Bind ViewModel.InputtingContent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            TextWrapping="Wrap">
                            <TextBox.Resources>
                                <SolidColorBrush x:Key="TextControlBackgroundPointerOver" Color="{ThemeResource SolidBackgroundFillColorBase}" />
                            </TextBox.Resources>
                        </TextBox>
                    </Popup>
                    <ToggleButton
                        x:Name="InputtingContentToggleButton"
                        Grid.Column="2"
                        IsChecked="{x:Bind InputtingContentFullPopup.IsOpen, Mode=OneWay}"
                        ToolTipService.ToolTip="{x:Bind i18n:Localization.Home_Button_FullContent_Tip}">
                        <FontIcon Glyph="&#xE740;" />
                    </ToggleButton>
                    <Grid Grid.Column="3">
                        <Button Command="{x:Bind ViewModel.PickCommand}" ToolTipService.ToolTip="{x:Bind i18n:Localization.Home_Button_Pick}">
                            <FontIcon Glyph="{x:Bind local:HomePage.GetPickerFontIconGlyph(ViewModel.InputtingMode), Mode=OneWay}" />
                            <Button.KeyboardAccelerators>
                                <KeyboardAccelerator Key="O" Modifiers="Control" />
                            </Button.KeyboardAccelerators>
                        </Button>
                    </Grid>
                </Grid>

                <!-- 哈希算法选择 -->
                <Border Style="{StaticResource CardBorderStyle}">
                    <ItemsRepeater ItemsSource="{x:Bind ViewModel.HashSettings, Mode=OneWay}">
                        <ItemsRepeater.Layout>
                            <UniformGridLayout ItemsStretch="Fill" />
                        </ItemsRepeater.Layout>
                        <ItemsRepeater.ItemTemplate>
                            <DataTemplate x:DataType="models:HashSetting">
                                <controls:HashCheckBox Setting="{x:Bind}" />
                            </DataTemplate>
                        </ItemsRepeater.ItemTemplate>
                    </ItemsRepeater>
                </Border>

                <!-- 操作按钮: 创建任务 -->
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Button
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        HorizontalContentAlignment="Center"
                        Command="{x:Bind ViewModel.CreateTaskCommand}"
                        Content="{x:Bind helpers:XamlFunc.TrueValueIfTrue(ViewModel.CreateTaskCommand.IsRunning, i18n:LocalizationCommon.Created, i18n:LocalizationCommon.Create), Mode=OneWay}"
                        CornerRadius="4,0,0,4"
                        Style="{ThemeResource AccentButtonStyle}" />
                    <DropDownButton
                        Grid.Column="1"
                        Padding="0,0,8,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        HorizontalContentAlignment="Stretch"
                        CornerRadius="0,4,4,0">
                        <DropDownButton.Flyout>
                            <MenuFlyout Placement="TopEdgeAlignedRight">
                                <ToggleMenuFlyoutItem IsChecked="{x:Bind ViewModel.StartingWhenCreateHashTask, Mode=TwoWay}" Text="{x:Bind i18n:Localization.HomePage_CreateAndStart}" />
                            </MenuFlyout>
                        </DropDownButton.Flyout>
                    </DropDownButton>
                </Grid>

                <!-- 最近一次任务 -->
                <Button
                    Padding="16,6,8,6"
                    HorizontalAlignment="Stretch"
                    HorizontalContentAlignment="Stretch"
                    Command="{x:Bind ViewModel.ShowResultCommand}"
                    CommandParameter="{x:Bind ViewModel.LastHashTask, Mode=OneWay}"
                    Visibility="{Binding ViewModel.LastHashTask, ElementName=This, Converter={StaticResource NullableToVisibilityConverter}}">
                    <controls:HashTaskGrid HashTask="{x:Bind ViewModel.LastHashTask, Mode=OneWay}" />
                </Button>

            </StackPanel>
        </Grid>
    </controls:NavigationViewBodyScrollViewer>

</Page>
